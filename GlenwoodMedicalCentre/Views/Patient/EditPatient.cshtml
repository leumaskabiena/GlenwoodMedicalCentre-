@model GlenwoodMed.Model.ViewModels.PatientModel
@{
    ViewBag.Title = "Edit Patient";
}
@using GlenwoodMed.BusinessLogic.Business
<style>
    .x {
        color: Blue;
        font: bold;
    }
</style>

<script>
    $(function () {
        $("#datepicker").datepicker();
    });
</script>
<ol class="breadcrumb">
    <li class="x"><a href="@Url.Action("Index", "Patient")">Patient</a></li>
    <li class="active">Edit Patient</li>
</ol>

@using (Html.BeginForm("EditPatient", "Patient", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="text-center"><h2 class="x">Edit Profile for (@Model.FullName @Model.Surname)</h2></div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userId)
    <div class="form-horizontal">
        <div class="col-md-6">
            <h4 class="x">Primary Patient Details</h4>
            <hr/>
            <div class="row-fluid">
                <div class="span2">
                    <div class="item">
                        
                            <div class="form-group">
                                @Html.Label("Profile Pic", new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                            @if (Model.FileType == GlenwoodMed.Model.ViewModels.FileType.Avatar)
                            {
                                    
                                        var base64 = Convert.ToBase64String(Model.resultFile);
                                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                    
                                    <a id="ShowImage" class="fancybox-button" data-rel="fancybox-button"
                                       title="Profile Pic" href="@imgSrc">
                                        <div class="zoom">
                                            <img src="@imgSrc" class="imgBox img-rounded" style="width:150px; height:150px" />
                                            <div class="zoom-icon"></div>
                                        </div>
                                    </a>
                                    }
                                    <b>Change profile pic ?</b><br/>
                                    @Html.TextBoxFor(x => x.File, new { type = "file", multiple = "true", @class = "form-control" })
                                    @*<img src="@imgSrc" alt="avatar" style="width:150px; height:150px" />*@
                                </div>
                            </div>
                        
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Title", new List<SelectListItem>{
                            new SelectListItem{ Text="Mr", Value="Mr"},
                            new SelectListItem{ Text="Mrs", Value="Mrs"},
                            new SelectListItem{ Text="Ms", Value="Ms"}
                            }, Model.Title, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaritalStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", id="datepicker" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Age, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Age, new { @class = "form-control", @readonly = true, @Name = "" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <h4 class="x">Contact Details</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            

                    <div id="editaddresses">
                        @Html.EditorFor(model => model.PatientAddresses, new { @class = "form-control" })
                    </div>

            <p>
                @Html.AddEditLink(" ", "#editaddresses", ".address", "PatientAddresses", typeof(GlenwoodMed.Model.ViewModels.PatientAddressModel), new { @class = "btn btn-primary glyphicon glyphicon-plus" })
            </p>
            @*<div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NationalId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h4 class="x">Patient Allergy(s)</h4> 
            <hr/>
            <div class="form-group">
                @Html.LabelFor(model => model.PatientAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PatientAllergy, new { rows = "4", cols = "50", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientAllergy, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <h4 class="x">Employer Details</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Employer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployerTelephone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployerTelephone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployerTelephone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />

            @*<h4 class="x">Medical Aid Details</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.MedicalAidName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MedicalAidName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MedicalAidName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MedicalAidNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MedicalAidNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MedicalAidNo, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
</div>
}

