@model GlenwoodMed.Model.ViewModels.PatientModel
@{
    ViewBag.Title = "Register";
}

<style>
    .x {
        color: Blue;
        font: bold;
    }

    .man{
        color:red;
    }

    .form-group.required .control-label:before {
        content: "*";
        color: red;
        font-family: 'Glyphicons Halflings';
        font-weight: normal;
        font-size: 8px;
    }

  .input-group .add-on.requiredmarker {            
    background-image: url('~/Images/required.png');
    background-repeat: no-repeat;
    background-position: 50% 50%;
}
</style>

<script src="~/Scripts/jquery-2.1.4.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
@*<script src="~/Scripts/DatePicker.js"></script>*@
<script type="text/javascript">
    $(function () {
        $("#datepicker").datepicker();
    });

    $(document).ready(function() {
        $(form).formValidation({
            icon: {
                required: 'glyphicon glyphicon-asterisk',
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            }
        });
    });
</script>

<script type="text/javascript">
    function ValidateMobNumber(txtMobId) {

        var fld = document.getElementById(txtMobId);

        //if (fld.value == "") {

        //    alert("You didn't enter a phone number.");

        //    fld.value = "";

        //    fld.focus();

        //    return false;

        //}

        if (isNaN(fld.value)) {

            alert("The phone number contains illegal characters.");

            fld.value = "";

            fld.focus();

            return false;

        }

        else if (!(fld.value.length == 10)) {

            alert("The phone number is the wrong length. \nPlease enter 10 digit mobile no.");

            fld.value = "";

            fld.focus();

            return false;

        }
    }
</script>

<script>
    jQuery.validator.setDefaults({
        highlight: function (element, errorClass, validClass) {
            if (element.type === "radio") {
                this.findByName(element.name).addClass(errorClass).removeClass(validClass);
            } else {
                $(element).addClass(errorClass).removeClass(validClass);
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            }
        },
        unhighlight: function (element, errorClass, validClass) {
            if (element.type === "radio") {
                this.findByName(element.name).removeClass(errorClass).addClass(validClass);
            } else {
                $(element).removeClass(errorClass).addClass(validClass);
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
            }
        }
    });

    jQuery(document).ready(function (){
        $("span.field-validation-valid, span.field-validation-error").each(function ()
        {
            $(this).addClass("help-inline");
        });
    });
    

    $(document).ready(function () {
        $('#txtPhone').blur(function (e) {
            if (validatePhone1('txtPhone')) {
                $('#spnPhoneStatus').html(' ');
                //$('#spnPhoneStatus').html('Valid');
                $('#spnPhoneStatus').css('color', 'green');
            }
            else {
                $('#spnPhoneStatus').html('Invalid');
                $('#spnPhoneStatus').css('color', 'red');
            }
        });
    });

    function validatePhone1(txtPhone) {
        var a = document.getElementById(txtPhone).value;
        var filter = /^[0-9-+]+$/;
        if (filter.test(a)) {
            return true;
        }
        else {
            return false;
        }
    }

    function validatePhone2(txtEPhone) {
        var a = document.getElementById(txtEPhone).value;
        var filter = /^[0-9-+]+$/;
        if (filter.test(a)) {
            return true;
        }
        else {
            return false;
        }
    }

    $(document).ready(function () {
        $('#txtEPhone').blur(function (e) {
            if (validatePhone2('txtEPhone')) {
                $('#EspnPhoneStatus').html(' ');
                //$('#EspnPhoneStatus').html('Valid');
                $('#EspnPhoneStatus').css('color', 'green');
            }
            else {
                $('#EspnPhoneStatus').html('Invalid');
                $('#EspnPhoneStatus').css('color', 'red');
            }
        });
    });

    $(document).ready(function () {
        $('#sEmail').blur(function (e) {
            if (validateEmail('sEmail')) {
                $('#EmailspnPhoneStatus').html(' ');
                //$('#EmailspnPhoneStatus').html('Valid');
                $('#EmailspnPhoneStatus').css('color', 'green');
            }
            else {
                $('#EmailspnPhoneStatus').html('Invalid');
                $('#EmailspnPhoneStatus').css('color', 'red');
            }
        });
    });

    function validateEmail(sEmail) {
        var a = document.getElementById(sEmail).value;
        var filter = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
        if (filter.test(a)) {
            return true;
        }
        else {
            return false;
        }
    }
</script>
<ol class="breadcrumb">
    <li class="x"><a href="@Url.Action("Index", "Patient")">Patient</a></li>
    <li class="active">Register Patient</li>
</ol>

<div class="progress">
    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 45%">
        <span class="sr-only">45% Complete</span> First Step !
    </div>
</div>
<h2>Register</h2>

<div class="row">
    @using (Html.BeginForm("RegisterPatient", "Patient", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
    {
        <div class="col-md-6">
            @Html.AntiForgeryToken()
            <h4 class="x">Primary Patient Details</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })

            @*<div class="form-group">
                @Html.Label("Avatar", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="Avatar" name="upload" />
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(x => x.File, new { @class = "col-md-2 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(x => x.File, new { type = "file", multiple = "true", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.File)
                </div>
            </div>

            <div class="form-group required">
                @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })

                <div class="col-md-10">
                    @Html.DropDownList("Title", new List<SelectListItem>{
                            new SelectListItem{ Text="Mr", Value="Mr"},
                            new SelectListItem{ Text="Mrs", Value="Mrs"},
                            new SelectListItem{ Text="Ms", Value="Ms"}
                            }, "Choose Title", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                @*<span class="man">*</span>*@
            </div>
            <div class="form-group required">
                @Html.LabelFor(m => m.FullName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control required" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group required">
                @Html.LabelFor(m => m.MaritalStatus, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Status", new List<SelectListItem>{
                            new SelectListItem{ Text="Single", Value="Single"},
                            new SelectListItem{ Text="Married", Value="Married"},
                            new SelectListItem{ Text="Divorced", Value="Divorced"}
                            }, "Select Marital Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MaritalStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(m => m.DOB, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.DOB, new { htmlAttributes = new { @class = "form-control datetype", id = "datepicker" } })
                    @Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                @Html.LabelFor(m => m.Sex, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Gender", new List<SelectListItem>{
                            new SelectListItem{ Text="Male", Value="Male"},
                            new SelectListItem{ Text="Female", Value="Female"}
                            }, "Select Gender", new { @class = "form-control" })
                </div>
            </div>
            <br/>
            <h4 class="x">Contact Details</h4>
            <hr />

            <div class="form-group required">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "sEmail" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    <span id="EmailspnPhoneStatus"></span>
                </div>
            </div>

            <div class="form-group required">
                @Html.LabelFor(m => m.Address1, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Address2, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Address3, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Address3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group required">
                @Html.LabelFor(m => m.PostalCode, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group required">
                @Html.LabelFor(m => m.Telephone, new { @class = "col-md-2 control-label", id = "inputtxt" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Telephone, new
              {
                  @class = "form-control",
                  id = "txtPhone"@*, onblur = "return ValidateMobNumber('txtMobId')"*@ })
                    <span id="spnPhoneStatus"></span>
                </div>
            </div>

            <div class="form-group required">
                @Html.LabelFor(m => m.NationalId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NationalId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NationalId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h4 class="x">Allergy(s)</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(m => m.PatientAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.PatientAllergy, new { rows = "5", cols = "50", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.PatientAllergy, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <h4 class="x">Employer Details</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(m => m.Employer, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Employer, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Employer, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EmployerTelephone, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.EmployerTelephone, new { @class = "form-control", id = "txtEPhone" })
                    @Html.ValidationMessageFor(m => m.EmployerTelephone, "", new { @class = "text-danger" })
                    <span id="EspnPhoneStatus"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Occupation, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Occupation, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Occupation, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @*<h4 class="x">Medical Aid Details</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(m => m.MedicalAidName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.MedicalAidName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MedicalAidName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MedicalAidNo, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.MedicalAidNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MedicalAidNo, "", new { @class = "text-danger" })
                </div>
            </div>*@


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="Next" />

                </div>
            </div>
        </div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}